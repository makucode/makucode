@import "../globals";

.Header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    padding: 0 2rem;
    width: 80vw;
}

.HeaderTitle {
    display: flex;
    align-items: center;
    margin-right: 2rem;
    font-family: $mono;
    font-weight: 600;

    h1 {
        font-family: $mono;
        width: 8ch;
        border-right: 2px solid $light;
        overflow: hidden;

        animation: blink 0.5s step-end infinite alternate,
            typing 1s steps(8, end);
    }

    .StopBlink {
        border-right: 2px solid transparent;
    }

    span {
        color: $light;
        font-size: 1.5rem;
        margin-right: 0.5rem;
    }
}

.HeaderLinks {
    height: fit-content;
    display: flex;
    column-gap: 2.25rem;

    transform: translateY(10px); // hotfix

    li {
        opacity: 0;
        animation: linkIn ease-in-out 1s forwards;
    }

    a {
        display: block;
        width: 100%;

        font-weight: 500;
    }
}

@keyframes blink {
    50% {
        border-color: transparent;
    }
}

@keyframes typing {
    0% {
        width: 0%;
    }
    50% {
        width: 0%;
    }
    100% {
        width: 8ch;
    }
}

@keyframes linkIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

// Burger Menu / Close

.HeaderBurger,
.HeaderClose {
    width: 50px;
    height: 50px;
    z-index: 20;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;

    transform: scale(0.995);
    opacity: 0;

    animation: buttonIn $fastInSlowOut 0.5s forwards;
}

.HeaderBurgerButton,
.HeaderBurgerButton::before,
.HeaderBurgerButton::after {
    display: block;
    background-color: $light;
    height: 7px;
    width: 7px;
    border-radius: 50px;
    transition: $transNormal;
}

.HeaderBurgerButton::before,
.HeaderBurgerButton::after {
    position: absolute;
    content: "";
}

.HeaderBurgerButton::before {
    transform: translateX(-14px);
}

.HeaderBurgerButton::after {
    transform: translateX(13px);
}

.HeaderBurgerButton:active:before,
.HeaderBurgerButton:active:after {
    transform: translateX(0);
}

.HeaderCloseButton,
.HeaderCloseButton::before {
    display: block;
    background-color: $light;
    height: 3px;
    width: 34px;
    border-radius: 50px;
    transform: rotate(45deg);
}

.HeaderCloseButton::before {
    position: absolute;
    content: "";
}

.HeaderCloseButton::before {
    transform: rotate(-90deg);
}

@keyframes buttonIn {
    from {
        transform: scale(0.995);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}

// Hover & Active Styles

@media only screen and (min-width: $s) {
    .HeaderLink:hover,
    .NavActive {
        span {
            position: relative;
            color: $dark;
            z-index: 10;

            transition: all ease-in-out 0.25s;
        }
    }

    .HeaderLink::after {
        display: block;
        width: 100%;
        height: 0;
        content: "";

        padding: 0.25rem 0.75rem;

        z-index: -5;
        transform: translateY(-82%) translateX(-12.5px);

        border-radius: 5px;

        transition: all ease-in-out 0.25s;
    }

    .HeaderLink:hover::after,
    .NavActive a::after {
        height: 1.1rem;
        background-color: $light;
    }
}

@media only screen and (max-width: $s) {
    .NavActive {
        list-style: disc;
        color: $light;

        span {
            color: $light;
        }
    }
}

// Responsiveness

@media only screen and (max-width: $s) {
    .Header {
        width: 90vw;
        padding: 0 1rem;
        height: fit-content;
    }

    .HeaderTitle {
        h1,
        span {
            font-size: 1.25rem;
        }
    }

    .HeaderLinksContainer {
        box-sizing: border-box;
        display: flex;
        align-items: center;
        justify-content: center;
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 100vw;
        background-color: $dark;
        opacity: 0;
        transform: translateX(100%);
        z-index: 10;
        transition: all $fastInSlowOut 0.5s;
    }

    .HeaderLinks {
        flex-direction: column;
        row-gap: 2rem;
        font-size: 1.25rem;
    }

    .NavOpen {
        opacity: 1;
        transform: translateX(0);
    }
}
